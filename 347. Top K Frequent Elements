import heapq
class Solution:
    def topKFrequent(self, nums: List[int], k: int) -> List[int]:
        map_ = {}
        for i in range(len(nums)):
            map_[nums[i]] = map_.get(nums[i],0)+1
        pri_que = []#小顶堆
        for key, freq in map_.items():
            heapq.heappush(pri_que,(freq, key)) #根据元组的第一个元素排序
            if len(pri_que)>k:
                heapq.heappop(pri_que)
        #heapq.heappop() 被调用时，都会从堆中移除并返回最小的元素
        result = [0]*k
        for i in range(k-1,-1,-1):
            result[i] = heapq.heappop(pri_que)[1]
        return result
